<?php
/**
 * @package   QWcrm
 * @author    Jon Brown https://quantumwarp.com/
 * @copyright Copyright (C) 2016 - 2017 Jon Brown, All rights reserved.
 * @license   GNU/GPLv3 or later; https://www.gnu.org/licenses/gpl.html
 */

defined('_QWEXEC') or die;

require(INCLUDES_DIR.'client.php');
require(INCLUDES_DIR.'user.php');

// Prevent undefined variable errors
\QFactory::$VAR['login_username'] = isset(\QFactory::$VAR['login_username']) ? \QFactory::$VAR['login_username'] : null;
\QFactory::$VAR['login_pwd'] = isset(\QFactory::$VAR['login_pwd']) ? \QFactory::$VAR['login_pwd'] : null;
\QFactory::$VAR['action'] = isset(\QFactory::$VAR['action']) ? \QFactory::$VAR['action'] : null;

// Get variables in correct format for login()
$credentials['username'] = \QFactory::$VAR['login_username'];
$credentials['password'] = \QFactory::$VAR['login_pwd'];
if ($config->get('remember_me') && isset(\QFactory::$VAR['remember'])) {
    $options['remember'] = \QFactory::$VAR['remember'];
} else {
    $options = array();
}

// If login submitted 
if(\QFactory::$VAR['action'] === 'login') {
    
    // recaptcha is disabled || recaptcha is enabled and passes authentication
    if(!$config->get('recaptcha') || ($config->get('recaptcha') && authenticate_recaptcha($config->get('recaptcha_secret_key'), \QFactory::$VAR['g-recaptcha-response']))) {

        /* Allowed to submit */        

        // Log the user in
        if(login(\QFactory::$VAR, $credentials, $options)) {

            force_page('index.php');

        } else {
            // do nothing reload login page
        }
            
        

    } else {

        /* Failed reCAPTCHA  */         

        // Allow login page to load with reCAPTCHA warning message (already generated by authenticate_recaptcha())

    }
    
}

// Remove credentials and options as no longer needed
unset($credentials);
unset($options);

// If logout is set, then log the user off
if (\QFactory::$VAR['action'] == 'logout') {    
    logout();
}

// Build the page
$smarty->assign('remember_me', $config->get('remember_me'));
$smarty->assign('recaptcha', $config->get('recaptcha'));
$smarty->assign('recaptcha_site_key', $config->get('recaptcha_site_key'));

